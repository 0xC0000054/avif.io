#support (>250 words)

1. AVIF support for Android
- Android 12 natively supports AVIF
- Chrome for android supports AVIF

2. opera
- supports AVIF natively




#articles (>2000 words)

1. The future of ALTERNATIVE text on images
- Current downside 1: Screen readers are dependent on developer input
- Current downside 2: Most people write insufficient ALT text
- Current downside 3: People use alt text for SEO purposes, not for accessibility
- Solution 1: An ALT-text API that scans the image and writes the description.
- Solution 2: Alt Text Generators online
- Solution 3: Assisstive technology uses this feature.
- Solution 4: Meanwhile, do it manually, the right way. How-to section

2. AVIF encoders
- List of current AVIF encoders

3. The syntax and semantics of AVIF
- Make an article out of https://aomediacodec.github.io/av1-avif/

4. The benefits of AVIF
- State problems with current image formats
- State why AVIF is the solution
- State benefits of avif (see homepage)

5. The importance of image Compression
- Outline the benefits of image compression
- Speed
- Quality
- Conversion rate optimization
- SEO
- Page experience

6. A complete guide to AVIF
- Write a 15.000 words article about AVIF that contains all information that can be found on the web



#comparisons (>750 words)
1. AVIF vs GIF
2. AVIF vs jpeg
3. AVIF vs jpegxl
4. AVIF vs webp
5. AVIF vs PNG
6. AVIF vs Webp2




#tutorials (>1000 words)

1. Creating a modern and responsive Image component in React & Next.JS
- Current downside 1: NextJS does not compress on build, but with the help of Vercel.
- Current downside 2: React does not support image optimization on build
- Current downside 3: Image component libraries and packages add a lot of unnessecary things
- Current downside 4: Adding manual code for every image is time-consuming
- Solution: Avif.JS detection script + Image Component + Sharp Library for creating images

2. Placeholder images for web performance
- Blurhash promotion
- Plaiceholder.co

3. Testing modern image formats support on your website
- Downside: You implemented AVIF (and webp) and use a modern browser
- Downside 2: You implemented responsive images or other solutions for better Web Core Vitals
- Current downside: No need to switch to older browsers to check if your website supports older file formats
- Solution: Google Chrome Rendering tab.




#utilities

1. Generator f√ºr optimale Markups von Bildern / Specify Image sizes & and alt text & url

2. Feedback page
- Add a Trello like page in which users can submit their ideas and feedback
- People should have the option to vote for features

3. AVIF support &caniuse
- Small passage about AVIF and why it is beneficial, as well as why it is good to have large support
- List of tools, software, hardware, cdn, etc sorted by categories. Imagery: These tools are heroes!




#update/
1. Make WordPress article a step by step tutorial and mention Shortpixel as a solution
