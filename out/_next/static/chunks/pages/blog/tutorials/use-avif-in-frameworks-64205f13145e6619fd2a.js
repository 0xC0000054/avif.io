_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[21],{"40Em":function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return l}));var n=a("nKUr"),r=a("zlmg"),s=a("iZZx"),i=a("vBjH"),o=a("wHcX"),c=a("Ne+F");function l(){return Object(n.jsxs)(r.a,{postdata:c.j,posts:[c.n,c.g,c.l],children:["Now that you've learned how fantastic AVIF is, you might wonder: 'Yo, how do I use AVIF images in frameworks? As AVIF is quite new, this must be super complicated and time-consuming to implement!\u2019 The answer is simple. Most javascript frontend frameworks support AVIF natively and rely on HTML and CSS implementation. To make sure we weren't talking nonsense, we tested it with the following frameworks:",Object(n.jsx)(s.a,{advantages:["facebook/react","vuejs/vue","angular/angular","vercel/next.js","svelte/svelte","nuxt/nuxt.js","gatsbyjs/gatsby"],checked:!0}),"You can see some screenshots of our test on Angular and React below:",Object(n.jsx)("h2",{id:"other-frameworks",children:"Other frameworks"}),'In principle, other frameworks might work differently. From our research, we found that Meteor and Ember support AVIF files without additional configuration. However because we have not experimented with the latest version live, we are listing them here as "maybe works" until we\'ve been in the science lab.',Object(n.jsx)(s.a,{advantages:["meteor/meteor","jashkenas/backbone","polymer/polymer","emberjs/ember.js"],checked:!1}),Object(n.jsx)("h2",{children:"An example code"}),"This is the code I've used to display the image below in React and Next.JS:",Object(n.jsx)(i.a,{language:"html",children:'<picture>\n          <source srcSet="/images/cloudflare-stats.avif" type="image/avif" />\n          <source srcSet="/images/cloudflare-stats.webp" type="image/webp" />\n          <img src="/images/cloudflare-stats.jpg" alt="avif in frameworks" />\n        </picture>'}),Object(n.jsx)(o.a,{url:"react-avif",alt:"using avif in react"}),Object(n.jsx)(o.a,{url:"react-render",alt:"rendered avif in react"}),Object(n.jsx)(o.a,{url:"angular-avif",alt:"using avif in angular"}),Object(n.jsx)(o.a,{url:"angular-render",alt:"rendered avif in angular"}),Object(n.jsx)("h2",{children:"Webpack File Loader"}),"In some cases, especially with older versions and when using webpack, you may encounter some problems. Especially:",Object(n.jsx)(i.a,{language:"html",children:"Module parse failed: Unexpected character ' ' (1:0) You may need an appropiate loader to handle this file type, currently no loaders are configured to process this fail. See https://webpack.js.org/concepts#loaders"})," ","Simply add the detection for AVIF files to the fileloader in your webpack.config.js:",Object(n.jsx)(i.a,{language:"javascript",children:"module.exports = {\n  module: {\n    rules: [{\n        test: /.(png|jpe?g|gif|webp|avif)$/i,\n        use: [{loader: 'file-loader'}]\n      }]\n  }\n}"}),Object(n.jsx)("h2",{children:"Automatic conversion"}),"We were unable to find a plugin that will convert the image into a different sizes and formats like AVIF to suit the needs of the client, and choose a modern format when possible. The Node.JS library sharp looks like its about to implement AVIF support. Did you ever come into contact with such a plugin? Did you have any good or bad experiences with it? Please let us know so we can complete this article."]})}},ft7D:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/tutorials/use-avif-in-frameworks",function(){return a("40Em")}])},wHcX:function(e,t,a){"use strict";a.d(t,"a",(function(){return r}));var n=a("nKUr");function r(e){return Object(n.jsx)(n.Fragment,{children:Object(n.jsx)("picture",{children:Object(n.jsx)("img",{width:"720",height:"405",decoding:"async",loading:"lazy",src:"/images/".concat(e.url,".jpg"),alt:e.alt})})})}}},[["ft7D",0,1,2,3,4,5]]]);