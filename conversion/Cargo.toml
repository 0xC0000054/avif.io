[package]
name = "conversion"
version = "0.1.0"
authors = ["Enn Michael <enntheprogrammer@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "demo"
path = "src/demo.rs"
required-features = ["build-demo"]

[features]
default = ["console_error_panic_hook", "build-wasm"]
build-demo = []
build-wasm = ["wasm-bindgen", "web-sys"]

[dependencies]
rav1e = { git = "https://github.com/ennmichael/rav1e", branch = "v0.3.4-progress-tracking", default-features = false }
image = { version = "0.23.9", default-features = false, features = ["gif", "jpeg", "ico", "png", "pnm", "tga", "tiff", "bmp", "hdr", "dxt", "dds", "farbfeld"] }
avif-serialize = "0.6.4"
wasm-bindgen = { version = "0.2.63", optional = true }
web-sys = { version = "0.3.44", features = ["console"], optional = true }
js-sys = "0.3.45"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
lto = true
